GRID SHIFT ALGORITHM

The ruby class found in this project operates on a grid with an n x n dimension.

For a given grid...

Example Grid:

    [‘A’, 'B', 'C', 'D',
     'E', 'F', 'G', 'H',
     'I', 'J', 'K', 'L',
     'M', 'N', 'O', ‘P’]

The characters in each position should be shifted clockwise.. relative to their position.

Given the above grid, items would move as follows:

    A -> B -> C -> D
    ^              |
    |              v
    E    J -> F    H
    ^    ^    |    |
    |    |    v    v
    I    K <- G    L
    ^              |
    |              v
    M <- N <- O <- P


As such, the expected output would be:

    [‘E’, 'A', 'B', 'C',
     'I', 'J', 'F', 'D',
     'M', 'K', 'G', 'H',
     'N', 'O', 'P', ‘L’]


My solution is n^2 in complexity... The collection size is n^2 and the algorithm loops through this once to divide the collection into tracks and again through each track to shift the items within.




